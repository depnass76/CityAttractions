// <auto-generated />
using System;
using CityAttractions.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CityAttractions.Migrations
{
    [DbContext(typeof(CityContext))]
    [Migration("20210524015313_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CityAttractions.Data.Attribution", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResultrId")
                        .HasColumnType("int");

                    b.Property<string>("attribution_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("attribution_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("license_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("license_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rId");

                    b.HasIndex("ResultrId");

                    b.ToTable("Attribution");
                });

            modelBuilder.Entity("CityAttractions.Data.Coordinates", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("rId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("CityAttractions.Data.Image", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResultrId")
                        .HasColumnType("int");

                    b.Property<int?>("attributionrId")
                        .HasColumnType("int");

                    b.Property<string>("caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("license")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sizesrId")
                        .HasColumnType("int");

                    b.Property<string>("source_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rId");

                    b.HasIndex("ResultrId");

                    b.HasIndex("attributionrId");

                    b.HasIndex("sizesrId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("CityAttractions.Data.Medium", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bytes")
                        .HasColumnType("int");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("rId");

                    b.ToTable("Medium");
                });

            modelBuilder.Entity("CityAttractions.Data.Original", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bytes")
                        .HasColumnType("int");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("rId");

                    b.ToTable("Original");
                });

            modelBuilder.Entity("CityAttractions.Data.Result", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RootrId")
                        .HasColumnType("int");

                    b.Property<int?>("coordinatesrId")
                        .HasColumnType("int");

                    b.Property<string>("country_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parent_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("score")
                        .HasColumnType("float");

                    b.Property<string>("snippet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rId");

                    b.HasIndex("RootrId");

                    b.HasIndex("coordinatesrId");

                    b.ToTable("result");
                });

            modelBuilder.Entity("CityAttractions.Data.Root", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("more")
                        .HasColumnType("bit");

                    b.HasKey("rId");

                    b.ToTable("root");
                });

            modelBuilder.Entity("CityAttractions.Data.Sizes", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("mediumrId")
                        .HasColumnType("int");

                    b.Property<int?>("originalrId")
                        .HasColumnType("int");

                    b.Property<int?>("thumbnailrId")
                        .HasColumnType("int");

                    b.HasKey("rId");

                    b.HasIndex("mediumrId");

                    b.HasIndex("originalrId");

                    b.HasIndex("thumbnailrId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("CityAttractions.Data.Thumbnail", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bytes")
                        .HasColumnType("int");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("rId");

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("CityAttractions.Data.Attribution", b =>
                {
                    b.HasOne("CityAttractions.Data.Result", null)
                        .WithMany("attribution")
                        .HasForeignKey("ResultrId");
                });

            modelBuilder.Entity("CityAttractions.Data.Image", b =>
                {
                    b.HasOne("CityAttractions.Data.Result", null)
                        .WithMany("images")
                        .HasForeignKey("ResultrId");

                    b.HasOne("CityAttractions.Data.Attribution", "attribution")
                        .WithMany()
                        .HasForeignKey("attributionrId");

                    b.HasOne("CityAttractions.Data.Sizes", "sizes")
                        .WithMany()
                        .HasForeignKey("sizesrId");
                });

            modelBuilder.Entity("CityAttractions.Data.Result", b =>
                {
                    b.HasOne("CityAttractions.Data.Root", null)
                        .WithMany("results")
                        .HasForeignKey("RootrId");

                    b.HasOne("CityAttractions.Data.Coordinates", "coordinates")
                        .WithMany()
                        .HasForeignKey("coordinatesrId");
                });

            modelBuilder.Entity("CityAttractions.Data.Sizes", b =>
                {
                    b.HasOne("CityAttractions.Data.Medium", "medium")
                        .WithMany()
                        .HasForeignKey("mediumrId");

                    b.HasOne("CityAttractions.Data.Original", "original")
                        .WithMany()
                        .HasForeignKey("originalrId");

                    b.HasOne("CityAttractions.Data.Thumbnail", "thumbnail")
                        .WithMany()
                        .HasForeignKey("thumbnailrId");
                });
#pragma warning restore 612, 618
        }
    }
}
